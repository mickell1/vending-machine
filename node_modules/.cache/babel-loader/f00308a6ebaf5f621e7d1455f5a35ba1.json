{"ast":null,"code":"var _jsxFileName = \"/Users/mickellcrawford/Desktop/Tech Tasks/vending-machine/src/Components/SlotItem/SlotItem.js\";\nimport React, { useState } from \"react\";\nimport { DivBox, DivName, Img, DivPrice, DivStatus, DivStock } from './SlotItem.style';\nimport emptyslot from '../../Images/emptyslot.jpeg';\nconst emptySlotImg = emptyslot;\n\nconst SlotItem = ({\n  product,\n  coin,\n  onPurchase\n}) => {\n  const {\n    productImageUrl,\n    name,\n    price,\n    stock\n  } = product;\n  let [amount, setAmount] = useState(stock);\n  return /*#__PURE__*/React.createElement(DivBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    src: amount > 0 ? productImageUrl : emptySlotImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DivName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, name || \"\"), /*#__PURE__*/React.createElement(DivPrice, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, price || \"\"), /*#__PURE__*/React.createElement(DivStatus, {\n    onClick: () => {\n      if (price > coin) return;\n      onPurchase(price);\n      setAmount(amount > 0 ? amount -= 1 : amount);\n    },\n    available: name && amount > 0 && coin >= price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DivStock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Stock: \", amount));\n};\n\nexport default SlotItem;","map":{"version":3,"sources":["/Users/mickellcrawford/Desktop/Tech Tasks/vending-machine/src/Components/SlotItem/SlotItem.js"],"names":["React","useState","DivBox","DivName","Img","DivPrice","DivStatus","DivStock","emptyslot","emptySlotImg","SlotItem","product","coin","onPurchase","productImageUrl","name","price","stock","amount","setAmount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,GAA1B,EAA+BC,QAA/B,EAAyCC,SAAzC,EAAoDC,QAApD,QAAoE,kBAApE;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,YAAY,GAAGD,SAArB;;AAEA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA;AAAjB,CAAD,KAAmC;AAClD,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,MAA0CN,OAAhD;AACA,MAAG,CAACO,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAACgB,KAAD,CAAjC;AAEA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEC,MAAM,GAAG,CAAT,GAAaJ,eAAb,GAA+BL,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUM,IAAI,IAAI,EAAlB,CAFF,eAGE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWC,KAAK,IAAI,EAApB,CAHF,eAIE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIA,KAAK,GAAGJ,IAAZ,EAAkB;AAClBC,MAAAA,UAAU,CAACG,KAAD,CAAV;AACAG,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAT,GAAaA,MAAM,IAAG,CAAtB,GAA0BA,MAA3B,CAAT;AACD,KALH;AAME,IAAA,SAAS,EAAEH,IAAI,IAAIG,MAAM,GAAG,CAAjB,IAAsBN,IAAI,IAAII,KAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAYE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUE,MADV,CAZF,CADF;AAkBD,CAtBD;;AAuBA,eAAeR,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { DivBox, DivName, Img, DivPrice, DivStatus, DivStock } from './SlotItem.style';\nimport emptyslot from '../../Images/emptyslot.jpeg';\n\nconst emptySlotImg = emptyslot\n\nconst SlotItem = ({ product, coin, onPurchase }) => {\n  const { productImageUrl, name, price, stock } = product;\n  let[amount, setAmount] = useState(stock)\n\n  return (\n    <DivBox>\n      <Img src={amount > 0 ? productImageUrl : emptySlotImg} />\n      <DivName>{name || \"\"}</DivName>\n      <DivPrice>{price || \"\"}</DivPrice>\n      <DivStatus\n        onClick={() => {\n          if (price > coin) return;\n          onPurchase(price);\n          setAmount(amount > 0 ? amount -=1 : amount);\n        }}\n        available={name && amount > 0 && coin >= price}\n      />\n      <DivStock>\n        Stock: {amount}\n      </DivStock>\n    </DivBox>\n  );\n}\nexport default SlotItem;\n"]},"metadata":{},"sourceType":"module"}